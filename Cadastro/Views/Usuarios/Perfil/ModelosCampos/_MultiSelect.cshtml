@model CadastroUsuarioVM
@using Cadastro.Models.Account.Cadastro.Campos
@using Cadastro.Models.Entities.DB.Account.Form
@using Cadastro.Models.ViewModel.Application.AccessContext;
@using Cadastro.Models.ViewModel.Account.Cadastro;

@{
  AcessoServiceVM acesso = (AcessoServiceVM)ViewData["acesso"];
  //SelectList Itens = campo.Selects.Select
  List<Grupo_Cadastro> grupos = (List<Grupo_Cadastro>)ViewData["grupos"];
  int g = (int)ViewData["g"];
  int l = (int)ViewData["l"];
  int c = (int)ViewData["c"];
  Campo_Cadastro campo = grupos[g].Linhas[l].Campos[c];

  string colsBootstrap = String.Format(
    "{0}{1}{2}{3}{4}",
    (campo.ColunasXS_Perfil == 0 ? $" col-{campo.ColunasXS_Cadastro}" : $" col-{campo.ColunasXS_Perfil}"),
    (campo.ColunasSM_Perfil == 0 ? $" col-sm-{campo.ColunasSM_Cadastro}" : $" col-sm-{campo.ColunasSM_Perfil}"),
    (campo.ColunasMD_Perfil == 0 ? $" col-md-{campo.ColunasMD_Cadastro}" : $" col-md-{campo.ColunasMD_Perfil}"),
    (campo.ColunasLG_Perfil == 0 ? $" col-lg-{campo.ColunasLG_Cadastro}" : $" col-lg-{campo.ColunasLG_Perfil}"),
    (campo.ColunasXL_Perfil == 0 ? $" col-xl-{campo.ColunasXL_Cadastro}" : $" col-xl-{campo.ColunasXL_Perfil}")
  );

}


@*<div class="@colsBootstrap form-group">
    <label asp-for="grupos[g].Linhas[l].Campos[c].Dados[0].MultiSelects">@campo.Label</label>
    <input asp-for="grupos[g].Linhas[l].Campos[c].Dados[0].MultiSelects" class="form-control" type="text" placeholder="@campo.PlaceHolder" value="" />
    <select asp-for="grupos[g].Linhas[l].Campos[c].Dados[0].MultiSelects" asp-items="">
      <option value="value">text</option>
    </select>
    @Html.ValidationMessageFor(m => m.grupos[g].Linhas[l].Campos[c].Dados[0].MultiSelects, "", new { @class = "text-danger" })
  </div>*@